#!/bin/bash -login

#SBATCH --time=00:30:00
#SBATCH --nodes=1-2
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=128
#SBATCH --mem=512G
#SBATCH --job-name 10mash
#SBATCH -A shade-cole-bonito

cd ${SLURM_SUBMIT_DIR}
cores=$SLURM_CPUS_PER_TASK
RAM=$SLURM_MEM_PER_NODE

echo -e "GAAP-BP v. 1.0 - Genome Assembly and Annotation Pipeline for Bacteria Pacbio
MIT LICENSE - Copyright Â© 2022 Gian M.N. Benucci, Ph.D.
email: benucci[at]msu[dot]edu\n"

source ../config.yaml

echo -e "\n Running script: 10_plasmidCheck-mash.sb \n"

echo -e "\n========== Sub-directories ==========\n"
if [ -d $project_dir/outputs/10_plasmidcheck_mash/ ]; then
	echo -e "\n Directory exist! I performed this step already. Exiting... \n"
else
	if [[ "$MASH" == "yes" ]]; then
	
		echo "mkdir $project_dir/outputs/10_plasmidcheck_mash/"; mkdir $project_dir/outputs/10_plasmidcheck_mash/
		echo "cd $project_dir/rawdata/"; cd $project_dir/rawdata/

		echo -e "\n========== Separate contigs ==========\n"
		for file in *.fastq;
		do

			if [ -d $project_dir/outputs/05_fixstart_circlator/${file%.*}/ ]; then
				source_file=$project_dir/outputs/05_fixstart_circlator/${file%.*}/pilon_polish.fasta
				echo -e "\n I am going to use the circularized assembly. \n"
			else 
				source_file=$project_dir/outputs/04_polish_minimap2-racon-pilon/${file%.*}/pilon.fasta
				echo -e "\n No curcular chromosome. I am going to use the high quality contigs. \n"
			fi;

			mkdir $project_dir/outputs/10_plasmidcheck_mash/${file%.*}
			cp $source_file $project_dir/outputs/10_plasmidcheck_mash/${file%.*}/
			cd $project_dir/outputs/10_plasmidcheck_mash/${file%.*}/
			
			#Awk code to split each contig in 1 separate file so that plasmid matching contigs can be extracted. 
			cat pilon*fasta | cut -d" " -f1 | awk -F '>' '/^>/ {F=sprintf("%s.fasta",$2); print > F;next;} {print >> F;}'

			# some data hygene
			rm $project_dir/outputs/10_plasmidcheck_mash/${file%.*}/pilon*fasta

				echo -e "\n========== Check for plasmids with mash ==========\n"
				cd $project_dir/outputs/10_plasmidcheck_mash/${file%.*}/
				for contig in *.fasta
				do	
					echo -e "\n========== mash sketch for file: $file ==========\n" 
					conda activate mash
					#echo -e "version of mash: `mash --version`"
					mash sketch \
						-S 42 \
						-k 21 \
						-s 1000 \
		      				-o ${contig//.fasta/} $contig
		    
					echo -e "\n========== mash info for file: $file ==========\n" 
					mash info *.msh

					echo -e "\n========== mash dist for file: $file ==========\n" 
					mash dist \
		      				-p $cores \
						-v 0.05 \
						-d 0.1 \
						$mash_plsdb ${contig//.fasta/.msh} > ${contig//.fasta/.tsv}
					conda deactivate
				done
			
			cat *.tsv | cut -f 1,2,3,4 > mash_plsdb.txt

			cut -f 1 mash_plsdb.txt > grep_plasmid.list
			
				while read line
					do grep "$line" $mash_plsdb_meta >> mash_plsdb_meta.txt
				done < grep_plasmid.list

			paste mash_plsdb.txt mash_plsdb_meta.txt | sort -k 3 > plasmid_candidate_meta.tsv

			sed -i '1i #plasmid-ID\tcontig-ID\tdistance\tp-value\tUID_NUCCORE\tACC_NUCCORE\tDescription_NUCCORE\tCreateDate_NUCCORE\tTopology_NUCCORE\tCompleteness_NUCCORE\tTaxonID_NUCCORE\tGenome_NUCCORE\tLength_NUCCORE\tSource_NUCCORE\tUID_ASSEMBLY\tStatus_ASSEMBLY\tSeqReleaseDate_ASSEMBLY\tSubmissionDate_ASSEMBLY\tLatest_ASSEMBLY\tUID_BIOSAMPLE\tACC_BIOSAMPLE\tLocation_BIOSAMPLE\tCoordinates_BIOSAMPLE\tIsolationSource_BIOSAMPLE\ttaxon_name\ttaxon_rank\tlineage\ttaxon_species_id\ttaxon_species_name\ttaxon_genus_id\ttaxon_genus_name\ttaxon_family_id\ttaxon_family_name\ttaxon_order_id\ttaxon_order_name\ttaxon_class_id\ttaxon_class_name\ttaxon_phylum_id\ttaxon_phylum_name\ttaxon_superkingdom_id\ttaxon_superkingdom_name\tloc_lat\tloc_lng\tloc_parsed\tGC_NUCCORE\tIdentical\tOldVersion\thits_rMLST\thitscount_rMLST\tD1\tD2\tplasmidfinder\tpmlst' plasmid_candidate_meta.tsv

			cat plasmid_candidate_meta.tsv | sed '1d' | cut -f2 | sort -u > plasmid_candidate_contig.list
			cat $(grep -v '^#' plasmid_candidate_contig.list) > plasmid_candidate_contig.fasta

			rm $project_dir/outputs/10_plasmidcheck_mash/${file%.*}/contig*.fasta
			rm $project_dir/outputs/10_plasmidcheck_mash/${file%.*}/contig*.msh
			cd $project_dir/rawdata/
		done;	
	else
		echo -e "\n You chose not to run mash, for identifying plasmid-born contigs. \n"
	fi;
fi

# https://readthedocs.org/projects/mash/downloads/pdf/latest/
# https://ccb-microbe.cs.uni-saarland.de/plsdb/plasmids/search_form/seq/
echo -e "\n========== Sbatch log ==========\n"
echo -e "\n Current directory: `pwd` \n"
echo -e "\n `sacct -u $MSUusername -j $SLURM_JOB_ID --format=JobID,JobName,Start,End,Elapsed,NCPUS,ReqMem` \n"
scontrol show job $SLURM_JOB_ID
mv $project_dir/code/slurm-$SLURM_JOB_ID* $project_dir/slurms/10_plasmidCheck-mash.slurm
