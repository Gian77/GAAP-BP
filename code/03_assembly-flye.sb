#!/bin/bash -login

#SBATCH --time=01:59:00
#SBATCH --nodes=1-2
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=128
#SBATCH --mem=384G
#SBATCH --job-name 3flye
#SBATCH -A shade-cole-bonito

cd ${SLURM_SUBMIT_DIR}
cores=$SLURM_CPUS_PER_TASK
RAM=$SLURM_MEM_PER_NODE

echo -e "GAAP-BP v. 1.0 - Genome Assembly and Annotation Pipeline for Bacteria Pacbio
MIT LICENSE - Copyright Â© 2022 Gian M.N. Benucci, Ph.D.
email: benucci[at]msu[dot]edu\n"

source ../config.yaml

echo -e "\n Running script: 03_assembly-flye.sb \n"

echo -e "\n========== Sub-directories ==========\n"
if [ -d $project_dir/outputs/03_assembly_flye/ ]; then
	echo -e "\n Directory exist! I performed this step already. Exiting... \n"
else
	echo "mkdir $project_dir/outputs/03_assembly_flye"; mkdir $project_dir/outputs/03_assembly_flye/
	echo "cd $project_dir/rawdata/"; cd $project_dir/rawdata/

	echo -e "\n========== Genome assembly with Flye ==========\n"
	for file in *.fastq;
	do
		echo -e "\n========== Assembling genome: $file ==========\n" 
		conda activate flye
		echo -e "Flye version: `flye --version`" 
		
		if [[ "$file" == *"$STRING"* ]];then

			flye \
				--threads $cores \
				--pacbio-hifi $file \
				--out-dir $project_dir/outputs/03_assembly_flye/${file/.fastq//} \
				--scaffold \
				--meta \
				--plasmids
		else 
			flye \
				--threads $cores \
				--pacbio-raw $file \
				--out-dir $project_dir/outputs/03_assembly_flye/${file/.fastq//} \
				--scaffold \
				--meta \
				--plasmids
		fi;		

		conda deactivate
	done;
fi

# --min-overlap  In the latest Flye versions, this parameter is chosen automatically based on the read length distribution (reads N90) and does not require manual setting.
# --iterations  By default, Flye runs one polishing iteration. Additional iterations might correct a small number of extra errors (due to improvements on how reads may align to the corrected assembly)
# --meta and --plasmids options - this should capture both chromosomal and plasmid sequence
echo -e "\n========== Sbatch log ==========\n"
echo -e "\n Current directory: `pwd` \n"
echo -e "\n `sacct -u $MSUusername -j $SLURM_JOB_ID --format=JobID,JobName,Start,End,Elapsed,NCPUS,ReqMem` \n"
scontrol show job $SLURM_JOB_ID
mv $project_dir/code/slurm-$SLURM_JOB_ID* $project_dir/slurms/03_assembly-flye.slurm
