#!/bin/bash -login

#SBATCH --time=00:30:00
#SBATCH --nodes=1-2
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=96
#SBATCH --mem=768G
#SBATCH --job-name 7qualimap
#SBATCH -A shade-cole-bonito

cd ${SLURM_SUBMIT_DIR}
cores=$SLURM_CPUS_PER_TASK
RAM=$SLURM_MEM_PER_NODE

echo -e "GAAP-BP v. 1.0 - Genome Assembly and Annotation Pipeline for Bacteria Pacbio
MIT LICENSE - Copyright Â© 2022 Gian M.N. Benucci, Ph.D.
email: benucci[at]msu[dot]edu\n"

source ../config.yaml

echo -e "\n Running script: 07_assemblyeval-minimap2-qualimap.sb \n"

echo -e "\n========== Sub-directories ==========\n"
if [ -d $project_dir/outputs/07_assemblyeval_minimap2-qualimap/ ]; then
	echo -e "\n Directory exist! I performed this step already. Exiting... \n"
else
	echo "mkdir $project_dir/outputs/07_assemblyeval_minimap2-qualimap/"; mkdir $project_dir/outputs/07_assemblyeval_minimap2-qualimap/
	echo "cd $project_dir/rawdata/"; cd $project_dir/rawdata/

	echo -e "\n========== Generating aligments and running Qualimap ==========\n"
	for file in *.fastq;
	do
		if [ -d $project_dir/outputs/05_fixstart_circlator/${file%.*}/ ]; then
			source_file=$project_dir/outputs/05_fixstart_circlator/${file%.*}/pilon_polish.fasta
			echo -e "\n I am going to use the circularized assembly. \n"
		else 
			source_file=$project_dir/outputs/04_polish_minimap2-racon-pilon/${file%.*}/pilon.fasta
			echo -e "\n No curcular chromosome. I am going to use the high quality contigs. \n"
		fi;

		echo -e "\n========== minimap2 align for file: $file ==========\n"
		mkdir $project_dir/outputs/07_assemblyeval_minimap2-qualimap/${file%.*}
		conda activate minimap2
		echo -e "minimap2 version: `minimap2 --version`"
		minimap2 \
			-x map-hifi \
			-t $cores \
			-a \
			$source_file \
			$file > $project_dir/outputs/07_assemblyeval_minimap2-qualimap/${file%.*}/minimap2_alignment.sam
		conda deactivate

		echo -e "\n========== samtools view for file: $file ==========\n" 
		conda activate samtools
			samtools view -@ $cores \
			-h -b \
			-S $project_dir/outputs/07_assemblyeval_minimap2-qualimap/${file%.*}/minimap2_alignment.sam \
			-o $project_dir/outputs/07_assemblyeval_minimap2-qualimap/${file%.*}/minimap2_alignment.view.bam
		
		echo -e "\n========== samtools sort for file: $file ==========\n" 
		samtools sort -@ $cores \
			$project_dir/outputs/07_assemblyeval_minimap2-qualimap/${file%.*}/minimap2_alignment.view.bam  \
			-o $project_dir/outputs/07_assemblyeval_minimap2-qualimap/${file%.*}/minimap2_alignment.sorted.bam 

		echo -e "\n========== samtools index for file: $file ==========\n" 
		samtools index -@ $cores \
			$project_dir/outputs/07_assemblyeval_minimap2-qualimap/${file%.*}/minimap2_alignment.sorted.bam 
		conda deactivate

		echo -e "\n========== qualimap mabqc for file: $file ==========\n" 
		conda activate qualimap
		qualimap bamqc \
			-bam $project_dir/outputs/07_assemblyeval_minimap2-qualimap/${file%.*}/minimap2_alignment.sorted.bam  \
			-outdir $project_dir/outputs/07_assemblyeval_minimap2-qualimap/${file%.*}/qualimap_evaluation \
			-outfile $project_dir/outputs/07_assemblyeval_minimap2-qualimap/${file%.*}/qualimap_evaluation/qualimap.html \
			-outformat html
		conda deactivate

		echo -e "\n========== remove files ==========\n"
		find $project_dir/outputs/07_assemblyeval_minimap2-qualimap/${file%.*}/ -type f -name "*_alignment.sam" -print0 | xargs -0 rm -rf
		find $project_dir/outputs/07_assemblyeval_minimap2-qualimap/${file%.*}/ -type f -name "*_alignment.bam" -print0 | xargs -0 rm -rf
	done;
fi

# minimap -a output in the SAM format (PAF by default)
# samtools -h, --with-header Include header in SAM output
# samtools -b, --bam Output BAM
# samtools -@, --threads Number of additional threads to use [0]
echo -e "\n========== Sbatch log ==========\n"
echo -e "\n Current directory: `pwd` \n"
echo -e "\n `sacct -u benucci -j $SLURM_JOB_ID --format=JobID,JobName,Start,End,Elapsed,NCPUS,ReqMem` \n"
scontrol show job $SLURM_JOB_ID
mv $project_dir/code/slurm-$SLURM_JOB_ID* $project_dir/slurms/07_assemblyeval_minimap2-qualimap.slurm
